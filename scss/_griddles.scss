@import '_settings.scss';
@import '_utils.scss';

// Remove white-space from grid elements so there's
// no need to cuddle inline-block elements
// using monospace font provides a reliable + consistent value
// This feature is inspired by http://www.stacklayout.com/
.#{$griddles-grid-classname} {
    font-family: "Courier New", monospace;
    letter-spacing: -0.63em;
    word-spacing:-0.63em;
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
}


// Offset the grid when the gutter is enabled
// So there's no left/right gutter for first
// and last elements in a given row.
.#{$griddles-grid-classname}.gutter {
    margin: 0 (-$griddles-gutter-size/2);
}

// When gutter class is added to the grid container
// this rule adds that padding to all the grid elems
// within.
.gutter > [class*="#{$griddles-class-prefix}-"] {
    padding: $griddles-gutter-size / 2;
}

// Set the scene for using inline-block
// box sizing (ie8+) ensures that padding directly
// on the grid components won't affect the widths.
// NOTE: This is extend only so isn't output.
.#{$griddles-class-prefix}-cont {
    display: inline-block;
    vertical-align: top;
    letter-spacing: normal;
    word-spacing: normal;
    margin: 0;
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    font-family: $griddles-font-family;
    width: 100%;
}

// Output generic helpers for visibility/display
.#{$griddles-class-prefix}-hide {
    display: none;
}
.#{$griddles-class-prefix}-show {
    display: inline-block;
}
// invisible and in flow
.#{$griddles-class-prefix}-invisible {
    visibility: hidden;
}
.#{$griddles-class-prefix}-visible {
    visibility: normal;
}

$selector-value-list: get_grid_selector_values($griddles-step-increment, $griddles-fraction-steps, $griddles-fraction-symbol, "", $griddles-class-prefix, "-");

// Generate the shared rules for all of the standard classes.
@each $sel-val in $selector-value-list {
    $sel: nth($sel-val, 1);
    #{$sel} {
        @extend .#{$griddles-class-prefix}-cont;
    }
}

// Defaults widths for standard classes
// This starts at "M" as "S" is essentially the baseline.
@include respond-to(nth($griddles-M, 2)) {
    @each $sel-val in $selector-value-list {
        $sel: nth($sel-val, 1);
        $val: nth($sel-val, 2);
        #{$sel} {
            width: percentage($val) / 100;
        }
    }
}

// This loop generates the breakpoint override selectors.
// They are contained to the breakpoint with min *and* max
// so if there's not an override for that breakpoint the normal
// the non-override class will apply.
//
// Note: we don't output the overrides for ie < 9
@if $is-ie-lt-9 == false {
    @each $k in $griddles-breakpoint-prefixes {
        @include respond-to(nth($k, 2), nth($k, 3)) {

            $breakpoint: nth($k, 1);
            $selector-value-list: get_grid_selector_values($griddles-step-increment, $griddles-fraction-steps, $griddles-fraction-symbol, $breakpoint, $griddles-class-prefix, "-");
            @each $sel-val in $selector-value-list {
                $sel: nth($sel-val, 1);
                $val: nth($sel-val, 2);
                #{$sel} {
                    width: percentage($val) / 100;
                }
            }

            .#{$breakpoint}-show {
                display: inline-block;
            }
            .#{$breakpoint}-hide {
                display: none;
            }
            .#{$breakpoint}-invisible {
                visibility: hidden;
            }
            .#{$breakpoint}-visible {
                visibility: visible;
            }
        }
    }
}

